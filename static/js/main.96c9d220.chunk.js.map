{"version":3,"sources":["components/Timeline/Timeline.js","image/profile.jpg","utils/resumeData.js","components/Button/Button.js","components/Profile/Profile.js","components/Header/Header.js","components/Footer/Footer.js","pages/Portfolio/Portfolio.js","pages/Resume/Resume.js","App.js","index.js"],"names":["CustomTimeLineSeparator","TimelineSeparator","className","TimelineDot","variant","TimelineConnector","CustomTimeline","title","icon","children","Timeline","TimelineItem","TimelineContent","Typography","name","email","phone","location","socials","GitHub","link","text","LinkedIn","Facebook","Instagram","about","experiences","date","description","educations","skills","address","projects","tag","image","caption","links","CustomButton","Button","endIcon","CustomTimelineItem","href","target","Profile","resumeData","src","ProfileImg","alt","Object","keys","map","key","style","display","withRouter","props","pathName","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","Toggle","Collapse","Telegram","Footer","Portfolio","useState","tabValue","setTabValue","projectDialog","setProjectDialog","Grid","container","spacing","item","xs","Tabs","value","indicatorColor","onChange","event","newValue","Tab","label","Set","project","sm","md","lg","Grow","in","timeout","Card","onClick","CardActionArea","CardMedia","CardContent","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Resume","experience","education","justify","skill","Paper","elevation","element","TextField","fullWidth","multiline","rows","App","Container","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c9d220.chunk.js","sourcesContent":["import React from 'react'\r\n// Importing Timeline from material-ui website\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Typography } from '@material-ui/core'\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nimport './Timeline.css';\r\n\r\nconst CustomTimeline = ({ title, icon, children }) => {\r\n    return (\r\n        <Timeline className={'timeline'}>\r\n        {/* Item Header */}\r\n        <TimelineItem className={'timeline_firstItem'}>\r\n          <TimelineSeparator>\r\n            <TimelineDot className={'timeline_dot_header'}>{icon}</TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n              <Typography variant='h6' className={'timeline_header'}>\r\n              {title}\r\n              </Typography>\r\n              </TimelineContent>\r\n        </TimelineItem>\r\n        {children}\r\n        </Timeline>\r\n    )\r\n}\r\n\r\nexport const CustomTimeLineSeparator = () => (\r\n    <TimelineSeparator className={'separator_padding'}>\r\n      <TimelineDot variant={'outlined'} className={'timeline_dot'} />\r\n      <TimelineConnector />\r\n    </TimelineSeparator>\r\n);\r\n\r\nexport default CustomTimeline\r\n","export default __webpack_public_path__ + \"static/media/profile.70cb7f66.jpg\";","import React from 'react';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport Language from '@material-ui/icons/Language'\r\n\r\n// import Digital from '../assets/image/digital.gif'\r\n\r\nexport default {\r\n    name: 'Sungpil An',\r\n    title: 'Full-Stack Developer',\r\n\r\n    email: 'ansungpil1@gmail.com',\r\n    phone: '706-987-0141',\r\n    location: 'Johns Creek, GA',\r\n\r\n    socials: {\r\n        GitHub: {\r\n            link: 'https://github.com/ahnlok',\r\n            text: 'Click Here',\r\n            icon: <GitHubIcon />,\r\n        },\r\n\r\n        LinkedIn: {\r\n            link: 'https://www.linkedin.com/in/an-sungpil-95ab8490/',\r\n            text: 'Click Here',\r\n            icon: <LinkedInIcon />,\r\n        },\r\n\r\n        Facebook: {\r\n            link: 'https://www.facebook.com/sungpil.an.9',\r\n            text: 'Click Here',\r\n            icon: <FacebookIcon />,\r\n        },\r\n\r\n        Instagram: {\r\n            link: 'https://www.instagram.com/sung_an_/',\r\n            text: 'Click Here',\r\n            icon: <InstagramIcon />,\r\n        },\r\n    },\r\n\r\n    about:\r\n        \"Greetings, I am an upcoming Full Stack Developer familiar with wide range of programming utilities and languages. Knowledgeable of backend and frontend development requirements. Collaborative team player with excellent technical abilities. Also, I am always eager to learn new programming languages and tools.\",       \r\n\r\n    experiences: [\r\n        {\r\n            title: 'Junior Sous Chef - Wallse',\r\n            date: 'Nov 2019 - Oct 2020',\r\n            description: 'Develope seasonal menu items, train new line cooks, and manage protein and sauce sections.'\r\n        },\r\n        {\r\n            title: 'Entremet - Marea',\r\n            date: 'May 2019 - Nov 2019',\r\n            description: 'Develope seasonal menu items, train new line cooks, and manage entremet sections.'\r\n        },\r\n        {\r\n            title: 'Chef de Partie - Public Kitchen by Jean-George',\r\n            date: 'Dec 2017 - May 2019',\r\n            description: 'Managing team of eight line cooks with sous chefs during the service, create new seasonal menus, and train new line cooks.'\r\n        },\r\n        {\r\n            title: 'Social Media Associate - TIC Restaurant Group',\r\n            date: 'Jan 2017- Dec 2017',\r\n            description: 'Managing Facebook, Twitter, Instagram, and Yelp pages of each restaurant, train new interns, and connect with various influencer for social media marketing purpose.'\r\n        },\r\n    ],\r\n\r\n    educations: [\r\n        {\r\n            title: 'Georgia Tech Full-Stack Bootcamp',\r\n            date: 'Dec 2020 - Mar 2021',\r\n            description: 'Certificate, Full-Stack Development'\r\n        },\r\n        {\r\n            title: 'Institute of Culinary Education',\r\n            date: 'Mar 2016 - Oct 2016',\r\n            description: 'Diploma, Culinary Arts and Restaurant Management'\r\n        },\r\n        {\r\n            title: 'University of Kansas',\r\n            date: 'Aug 2011 - Dec 2015',\r\n            description: 'Bachelor, Journalism & History'\r\n        },\r\n        {\r\n            title: 'Columbus Magnet High School',\r\n            date: 'Aug 2008 - May 2011',\r\n            description: 'Top high school in the state of Georgia in 2010'\r\n        },\r\n    ],\r\n\r\n    skills: [\r\n        {\r\n            title: \"Front-End\",\r\n            description: [\r\n                \"HTML5\",\r\n                \"CSS\",\r\n                \"Bootstrap\",\r\n                \"Materialize\",\r\n                \"Material UI\",\r\n                \"Javascript\",\r\n                \"React JS\",\r\n            ],\r\n        },\r\n        {\r\n            title: \"Back-End\",\r\n            description: [\r\n                \"Node JS\",\r\n                \"Python\",\r\n            ],\r\n        },\r\n        {\r\n            title: \"Database\",\r\n            description: [\r\n                \"Firebase\",\r\n                \"My SQL\",\r\n                \"Mongo DB\",\r\n                \"AWS\",\r\n            ],\r\n        },\r\n        {\r\n            title: \"Source Control\",\r\n            description: [\r\n                \"Git\",\r\n                \"GitHub\",\r\n            ]\r\n        }\r\n    ],\r\n\r\n    address: '10020 Grandview Square',\r\n\r\n     projects: [\r\n        {   \r\n            // Project 1\r\n            tag: 'Front-End',\r\n            image: '../images/digital.gif',\r\n            title: 'Digital Coffee',\r\n            caption: 'HTML5, CSS(Bootstrap), JQuery, API, AJAX',\r\n            description: 'Simple API/AJAX project utilizing HTML5/CSS and Jquery to improve blendness of Google Search page with weather information, and randomly generated quotes and images.',\r\n            links: [\r\n                {link: 'https://ahnlok.github.io/digital-coffee/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/digital-coffee', icon: <GitHubIcon />},\r\n            ] \r\n                \r\n        },\r\n        {\r\n            // Project 2\r\n            tag: 'Front-End',\r\n            image:'../images/bb.gif',\r\n            title: 'Breaking Bad Character Searcher',\r\n            caption: 'React, HTML5, CSS, JavaScript, API, AJAX',\r\n            description: 'This app uses the Breaking Bad API utilizing React hooks. This program allows user to search for their favorite Breaking Bad character information by searching names of the characters. Lastly, this is a practice using the example from the Traversy Media video Breaking Bad API. Video link is in the Credit section of ReadMe.',\r\n            links: [\r\n                {link: 'https://ahnlok.github.io/breaking-bad-api-react/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/breaking-bad-api-react', icon: <GitHubIcon />},\r\n            ] \r\n                \r\n        },\r\n        {\r\n            // Project 3\r\n            tag: 'Back-End',\r\n            image: '../images/fit.gif',\r\n            title: 'Fitness Tracker',\r\n            caption: 'MongoDB/mongoose',\r\n            description: 'With the use of MongoDB and Mongoose, this app allows users to track their workout information by \"add\", \"continue\", \"complete\". \"see statistics\" depends on API paths',\r\n            links: [\r\n                {link: 'https://pacific-mesa-01605.herokuapp.com/?id=6022b16a5a8abd00150fb5d4', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/workout-tracker', icon: <GitHubIcon />},\r\n            ] \r\n                \r\n        },\r\n        {   \r\n            // Project 4\r\n            tag: 'Front-End',\r\n            image: '../images/employeed.gif',\r\n            title: 'Employee Directory',\r\n            caption: 'React, HTML5, CSS, JavaScript, API, and AJAX',\r\n            description: 'With the use of the \"Random User API\": https://randomuser.me/, This program allows user to search for the employees information by searching employees name',\r\n            links: [\r\n                {link: 'https://ahnlok.github.io/employee-directory/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/employee-directory', icon: <GitHubIcon />},\r\n            ]      \r\n        },\r\n        {   \r\n            // Project 5\r\n            tag: 'Front-End',\r\n            image: '../images/example.gif',\r\n            title: '3D Darth Vader Card',\r\n            caption: 'HTML5, CSS, JavaScript',\r\n            description: 'This is \"3D Darth Vader Card\" using HTML5, CSS, and Javascript with the use of \"rotate\" and \"transform\" function in Javascript',\r\n            links: [\r\n                {link: 'https://ahnlok.github.io/darth-vader-3D-card/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/darth-vader-3D-card', icon: <GitHubIcon />},\r\n            ]      \r\n        },\r\n        {   \r\n            // Project 6\r\n            tag: 'Full-Stack',\r\n            image: '../images/freshdev.gif',\r\n            title: 'Fresh Dev',\r\n            caption: 'Node.JS, MySQL, HTML5, CSS, JavaScript, API, AJAX',\r\n            description: 'Fresh-Dev is a online platform for students to showcase their work and portfolios for recruiters and hiring managers to view and search for base on specific programming languages',\r\n            links: [\r\n                {link: 'https://fresh-dev.herokuapp.com/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/fresh-dev', icon: <GitHubIcon />},\r\n            ]      \r\n        },\r\n\r\n        {   \r\n            // Project 7\r\n            tag: 'Back-End',\r\n            image: '../images/employee.gif',\r\n            title: 'Employee Management Tracker',\r\n            caption: 'MySQL(inquirer), Node.JS JavaScript',\r\n            description: 'This program allows the user to view, add, delete, and update: employee, department, and role.',\r\n            links: [\r\n                // {link: 'https://fresh-dev.herokuapp.com/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/employee-tracker', icon: <GitHubIcon />},\r\n            ]      \r\n        },\r\n\r\n        {   \r\n            // Project 8\r\n            tag: 'Full-Stack',\r\n            image: '../images/notetaker.gif',\r\n            title: 'Note Taker',\r\n            caption: 'Node.JS (express), JavaScript, HTML5, CSS',\r\n            description: 'This program allows the user to write, save, and delete notes.',\r\n            links: [\r\n                {link: 'https://infinite-inlet-33096.herokuapp.com/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/note-taker', icon: <GitHubIcon />},\r\n            ]      \r\n        },\r\n        {   \r\n            // Project 8\r\n            tag: 'Full-Stack',\r\n            image: '../images/burger.gif',\r\n            title: 'Eat Burger',\r\n            caption: 'Node.JS, MySQL, ORM, Handlebar JavaScript, HTML5, CSS',\r\n            description: \"This program allows user to 'Add' or 'Pick' burgers from the burger list. If the user is decided to 'Eat' the burger, click 'Eat' button, then the user's choice of burger will move to 'Burgers That You Ate' list. Moreover, if the user is full, the user can simply click 'I'm Full' button, then the burger will move back to 'Burger List\",\r\n            links: [\r\n                {link: 'https://stormy-bayou-11683.herokuapp.com/', icon: <Language />},\r\n                {link: 'https://github.com/ahnlok/eat-burger', icon: <GitHubIcon />},\r\n            ]      \r\n        },\r\n    ]\r\n};","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport './Button.css';\r\n\r\nconst CustomButton = ({text, icon}) => {\r\n    return (\r\n        <Button className='custom_btn' \r\n            endIcon={\r\n            icon ? <div className='btn_icon_container'>{icon}</div> : null}>\r\n            <span className='btn_text'>{text}</span>\r\n\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default CustomButton\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CustomTimeline, { CustomTimeLineSeparator } from '../Timeline/Timeline'\r\nimport './Profile.css';\r\nimport ProfileImg from '../../image/profile.jpg'\r\nimport resumeData from '../../utils/resumeData';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport CustomButton from '../Button/Button'\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\nconst CustomTimelineItem = ({title, text, link}) => (\r\n    <TimelineItem>\r\n        <CustomTimeLineSeparator />\r\n        <TimelineContent className=\"timeline_content\">\r\n            {link ? (\r\n            <Typography className=\"timelineItem_text\">\r\n                <span>{title}:</span>{\" \"} \r\n                <a href={link} target=\"_blank\">\r\n                    {text}\r\n                </a>\r\n            </ Typography>\r\n                ) : (\r\n                <Typography className=\"timelineItem_text\">\r\n                    <span>{title}:</span> {text}\r\n                </Typography>\r\n            )}\r\n        </TimelineContent>\r\n    </TimelineItem>\r\n);\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className='profile container_shadow'>\r\n            <div className='profile_name'>\r\n                <Typography className='name'>\r\n                    {resumeData.name}\r\n                </Typography>\r\n                <Typography className='title'>\r\n                    {resumeData.title}\r\n                </Typography>\r\n            </div>\r\n\r\n            <figure className='profile_image'>\r\n                <img src={ ProfileImg } alt=\"\"/>\r\n            </figure>\r\n\r\n            <div className='profile_information'>\r\n                <CustomTimeline icon={<PersonOutlineOutlinedIcon />}>\r\n                    {/* <CustomTimelineItem title=\"Name\" text={resumeData.name} />\r\n                    <CustomTimelineItem title=\"Title\" text={resumeData.title} /> */}\r\n                    <CustomTimelineItem title=\"Email\" text={resumeData.email} />\r\n                    <CustomTimelineItem title=\"Phone\" text={resumeData.phone} />\r\n                    <CustomTimelineItem title=\"Location\" text={resumeData.location} />  \r\n\r\n\r\n                    {Object.keys(resumeData.socials).map((key)=> (\r\n                        <CustomTimelineItem title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].link} />\r\n\r\n                    ))}\r\n                </CustomTimeline>\r\n               \r\n               <div className='button_container' style={{display: 'flex'}}>\r\n\r\n               <CustomButton text={'Full Resume'} icon={<GetAppIcon />} />\r\n               </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { \r\n    Button,\r\n    Form,\r\n    FormControl,\r\n    Nav,\r\n    Navbar,\r\n    NavDropdown,\r\n} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    HomeRounded,\r\n    SchoolRounded,\r\n    WorkRounded,\r\n    Facebook,\r\n    LinkedIn,\r\n    GitHub,\r\n    Instagram,\r\n    Telegram,\r\n} from '@material-ui/icons';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport resumeData from '../../utils/resumeData';\r\nimport CustomButton from '../Button/Button';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    const pathName = props?.location?.pathName;\r\n\r\n    return (\r\n      <Navbar expand='lg' sticky='top' className='header'>\r\n          {/* Home Link */}\r\n          <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n              <Navbar.Brand className='header_home'>\r\n                  <HomeRounded />\r\n              </Navbar.Brand>\r\n          </Nav.Link>\r\n            <Navbar.Toggle />\r\n\r\n            <Navbar.Collapse>\r\n                <Nav className='header_left'>\r\n                {/* Resume Link*/}\r\n                    <Nav.Link \r\n                        as={NavLink} \r\n                        to='/' \r\n                        className={pathName == '/' ? 'header_link_active' : 'header_link'}>\r\n                        About Me\r\n                    </Nav.Link>\r\n                {/* Portfolio Link */}\r\n                    <Nav.Link \r\n                        as={NavLink} \r\n                        to='/portfolio' \r\n                        className={pathName == '/portfolio' ? 'header_link_active' : 'header_link'}>\r\n                        Portfolio\r\n                    </Nav.Link>\r\n                </Nav>\r\n\r\n                <div className='header_right'>\r\n                    {Object.keys(resumeData.socials).map(key => (\r\n                        <a href={resumeData.socials[key].link} target='_blank'>{resumeData.socials[key].icon}</a>\r\n                    ))}\r\n                    <CustomButton text={'Contact'} icon={<Telegram />} />\r\n                </div>\r\n            </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Footer.css';\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <div className=\"footer_left\">\r\n                <Typography className='footer_name'>\r\n                   {resumeData.name}\r\n                </Typography>\r\n            </div>\r\n            <div className=\"footer_right\">\r\n                <Typography className='footer_copyright'>\r\n                    Developed by <a href= \"https://github.com/ahnlok\" target='_blank'>Sungpil An</a>. \r\n\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport { CardActionArea, CardMedia, CardContent, Dialog, MuiDialogTitle, Tab, Tabs, Grow, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport  { Grid, Paper, TextField, Typography, Card } from '@material-ui/core';\r\nimport resumeData from '../../utils/resumeData';\r\nimport './Portfolio.css'\r\n\r\nconst Portfolio = () => {\r\n        const [tabValue, setTabValue] = useState('All');\r\n        const [projectDialog, setProjectDialog] = useState(false)\r\n\r\n    return (\r\n       <Grid container spacing={1} className='section pb_45 pt_45'>\r\n           {/* Title */}\r\n           <Grid item className='section_title mb_20'>\r\n               <span></span>\r\n               <h6 className='section_title_text'>Portfolio</h6>\r\n           </Grid>\r\n\r\n           {/* Tabs */}\r\n           <Grid item xs={12}>\r\n               <Tabs \r\n               value={tabValue} \r\n               indicatorColor='white' \r\n               className='customTabs' \r\n               onChange={(event, newValue) => setTabValue(newValue)}>\r\n                   <Tab label='All' value='All' className={tabValue == 'All' ? 'cutomTabs_item active' : 'customTabs_item'} />\r\n                   {[...new Set(resumeData.projects.map(item => item.tag))].map(tag => (<Tab \r\n                   label={tag} \r\n                   value={tag} \r\n                   className={\r\n                       tabValue == tag ? \r\n                       'customTabs_item active' \r\n                       : 'customTabs_item'\r\n                       } \r\n                       />\r\n                       )\r\n                    )}\r\n               </Tabs>\r\n           </Grid>\r\n\r\n            {/* Project */}\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2}>\r\n                    {resumeData.projects.map((project) => (\r\n                    <>\r\n                    {tabValue == project.tag || tabValue == 'All' ? (\r\n                         <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                         <Grow in timeout={1000}>\r\n                         <Card \r\n                         className='customCard' \r\n                         onClick={() => setProjectDialog(project)}>\r\n                             <CardActionArea>\r\n                                 <CardMedia className='customCard_image' \r\n                                 image={project.image} \r\n                                 title={project.title} \r\n                                 />\r\n                                     <CardContent>\r\n                                         <Typography variant={'body2'} className='customCard_title'>\r\n                                             {project.title}\r\n                                         </Typography>    \r\n                                         <Typography variant='caption' className='customCard_caption'>\r\n                                             {project.caption}\r\n                                         </Typography>       \r\n                                     </CardContent>\r\n                             </CardActionArea>\r\n                         </Card>\r\n                         </Grow>\r\n                     </Grid>\r\n                    ) : null}\r\n                    </>\r\n                       \r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={projectDialog} onClose={() => setProjectDialog(false)} className='projectDialog'>\r\n                <DialogTitle onClose={() => setProjectDialog(false)} className='projectDialog_title'>\r\n                    {projectDialog.title}\r\n                </DialogTitle> \r\n                <img src={projectDialog.image} alt='' className='projectDialog_image' />\r\n                <DialogContent>\r\n                    {projectDialog.description}\r\n                </DialogContent>\r\n                <DialogActions className='projectDialog_actions'>\r\n                    {projectDialog?.links?.map((link) => (\r\n                        <a href={link.link} target='_blank' className='projectDialog_icon'>{link.icon}</a>\r\n                    ))}\r\n                </DialogActions>\r\n            </Dialog>\r\n       </Grid>\r\n    )\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react'\r\nimport  { Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport CustomTimeline, { CustomTimeLineSeparator } from '../../components/Timeline/Timeline';\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport resumeData from '../../utils/resumeData';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\nimport './Resume.css';\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <>\r\n            {/* About Me */}\r\n            <Grid container className='section pb_45 pt_45'>\r\n                <Grid item className='section_title mb_30'>\r\n                    <span></span>\r\n                    <h6 className='section_title_text'>About Me</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant='body2' className='aboutme_text'>{resumeData.about}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* Education & Experience */}\r\n            <Grid container className='section pb_45'>\r\n                <Grid item className='section_title mb_30'>\r\n                    <span></span>\r\n                    <h6 className='section_title_text'>Resume</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container className='resume_timeline'>\r\n                    {/* Experience */}\r\n                        <Grid item sm={12} md={6}>\r\n                            <CustomTimeline title='Experience' icon={<WorkIcon />}>\r\n                                {resumeData.experiences.map(experience => (\r\n                                <TimelineItem>\r\n                                    <CustomTimeLineSeparator />\r\n                                    <TimelineContent className='timeline_content'>\r\n                                        <Typography className='timeline_title'>{experience.title}</Typography>\r\n                                        <Typography variant='caption' className='timeline_date'>{experience.date}</Typography>\r\n                                        <Typography variant='body2' className='timeline_description'>{experience.description}</Typography>\r\n                                    </TimelineContent>\r\n                                </TimelineItem>\r\n                                ))}\r\n                            </CustomTimeline>\r\n                        </Grid>\r\n                    {/* Education */}\r\n                        <Grid item sm={12} md={6}>\r\n                        <CustomTimeline title='Education' icon={<SchoolIcon />}>\r\n                                {resumeData.educations.map(education => (\r\n                                <TimelineItem>\r\n                                    <CustomTimeLineSeparator />\r\n                                    <TimelineContent className='timeline_content'>\r\n                                        <Typography className='timeline_title'>{education.title}</Typography>\r\n                                        <Typography variant='caption' className='timeline_date'>{education.date}</Typography>\r\n                                        <Typography variant='body2' className='timeline_description'>{education.description}</Typography>\r\n                                    </TimelineContent>\r\n                                </TimelineItem>\r\n                                ))}\r\n                            </CustomTimeline>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* Skills */}\r\n            <Grid \r\n                container \r\n                className='section graybg pb_45 p_50'>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justify=\"space-between\" spacing={3}>\r\n                        {resumeData.skills.map(skill => (\r\n                        <Grid item xs={12} sm={6} md={3}>\r\n                            <Paper elevation={0} className='skill'>\r\n                                <Typography variant='h6' className='skills_title'>\r\n                                    {skill.title}\r\n                                </Typography>\r\n                                {skill.description.map(element => (\r\n                                    <Typography variant='body2' className='skill_description'>\r\n                                        <TimelineDot variant={'outlined'} className='timeline_dot' />\r\n                                        {element}\r\n                                    </Typography>\r\n                                ))}\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n                        \r\n        {/* Contact */}\r\n        <Grid container spacing={7} className='section pt_45 pb_45'>\r\n            {/* Contact Form */}\r\n            <Grid item xs={12} lg={7}>\r\n                <Grid container>\r\n                    <Grid item className='section_title mb_30'>\r\n                        <span></span>\r\n                        <h6 className='section_title_text'>Contact Form</h6>\r\n                    </Grid>\r\n                    <Grid item xs={12}> \r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField fullWidth name='name' label='Name' />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField fullWidth name='email' label='E-Mail' />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField fullWidth name='message' label='Message'  multiline rows={4}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <CustomButton text='Submit' />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {/* Contact Info */}\r\n            <Grid item xs={12} lg={5}>\r\n                <Grid container>\r\n                    <Grid item className='section_title mb_30'>\r\n                        <span></span>\r\n                        <h6 className='section_title_text'>Contact Information</h6>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            {/* Name */}\r\n                            <Typography className='contactInfo_item'>\r\n                                <span>Sungpil An</span>\r\n                            </Typography>\r\n                            </Grid>\r\n                            {/* Address */}\r\n                            <Grid item xs={12}>\r\n                                <Typography className='contactInfo_item'>\r\n                                    <span>Address: </span> {resumeData.address}\r\n                                </Typography>\r\n                            </Grid>\r\n                            {/* Phone */}\r\n                            <Grid item xs={12}>\r\n                                <Typography className='contactInfo_item'>\r\n                                    <span>Phone: </span> {resumeData.phone}\r\n                                </Typography>\r\n                            </Grid>\r\n                            {/* Email */}\r\n                            <Grid item xs={12}>\r\n                                <Typography className='contactInfo_item'>\r\n                                    <span>Email: </span> {resumeData.email}\r\n                                </Typography>\r\n        \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* Social Media Icon */}\r\n                    <Grid item xs={12}>\r\n                        <Grid container className='contactInfo_socialsContainer'>\r\n                            {Object.keys(resumeData.socials).map(key => (<Grid item className='contactInfo_social'>\r\n                                <a href={resumeData.socials[key].link}>{resumeData.socials[key].icon}</a>\r\n                            </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>           \r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Resume;\r\n","// Importing from @material-ui\nimport React from 'react';\nimport { Container, Grid } from '@material-ui/core';\n\nimport Profile from './components/Profile/Profile';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport Resume from './pages/Resume/Resume';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n   <Container className={'top_60'}>\n     <Grid container spacing={8}>\n       <Grid item xs={12} sm={12} md={4} lg={3}>\n         <Profile />\n       </Grid>\n      \n       <Grid item xs>\n         <Router>\n         <Header />\n         <div className='main-content container_shadow'>\n           {/* Switch */}\n           <Switch>\n            {/* Route path for portfolio */}\n            <Route path='/portfolio'>\n              <Portfolio />\n            </Route>\n\n            {/* Route path for resume */}\n            <Route path='/'>\n              <Resume />\n            </Route>\n           </Switch>\n           </div>\n         </Router>\n\n         <Footer />\n       </Grid>\n     </Grid>\n   </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}